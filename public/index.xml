<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown 文档 on Markdown</title>
    <link>https://md.xalaok.top/</link>
    <description>Recent content in Markdown 文档 on Markdown</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <atom:link href="https://md.xalaok.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Article Layout</title>
      <link>https://md.xalaok.top/docs/document-style/article-layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/article-layout/</guid>
      <description>With the dawn of the Internet, the birth of Internet slang, and the growing use of SMS, many of us are starting to forget the fundamental aspects of English punctuation. Would you like to write a great paper for one of your classes or submit a polished, impeccably written proposal to your boss? If so, proper punctuation is a must.</description>
    </item>
    <item>
      <title>Markdown 介绍</title>
      <link>https://md.xalaok.top/docs/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/intro/</guid>
      <description> Markdown 是什么？ # Markdown 是一种轻量级标记语言，它以纯文本形式（易读、易写、易更改）编写文档，并最终以 HTML 格式发布。 Markdown 也可以理解为将以 MARKDOWN 语法编写的语言转换成 HTML 内容的工具。
谁创造了它？ # 它由 Aaron Swartz 和 John Gruber 共同设计，Aaron Swartz 就是那位于 2013年1月11日 自杀，有着开挂一般人生经历的程序员。维基百科对他的 介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。
他有着足以让你跪拜的人生经历：
14岁参与 RSS 1.0 规格标准的制订。 2004年入读斯坦福，之后退学。 2005年创建 Infogami，之后与 Reddit 合并成为其合伙人。 2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。 2011年7月19日，因被控从 MIT 和 JSTOR 下载 480 万篇学术论文并以免费形式上传于网络被捕。 2013年1月自杀身亡。 为什么要使用它？ # 它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。 兼容 HTML，可以转换为 HTML 格式发布。 跨平台使用。 越来越多的网站支持 Markdown。 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail） 摆脱 Word（我不是认真的）。 </description>
    </item>
    <item>
      <title>Markdown 标题</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/headline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/headline/</guid>
      <description>Markdown 支持两种标题的语法，类 Atx 和类 Setext 形式。
类 Atx 形式使用 # 数量表示标题的阶数（标准写法）
在行首插入 1 到 6 个 #，对应到标题 1 到 6 阶，例如：
# 这是 H1 ## 这是 H2 ### 这是 H3 #### 这是 H4 ##### 这是 H5 # 一般不作使用 ###### 这是 H6 # 一般不作使用 类 Setext 形式则是用底线的形式（认识就行，不作使用）
利用 =（最高阶标题）和 -（第二阶标题），例如：
This is an H1 ============= This is an H2 ------------- 任何数量的 = 和 - 都可以有效果。</description>
    </item>
    <item>
      <title>编辑器</title>
      <link>https://md.xalaok.top/docs/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/software/</guid>
      <description>一些常见的 Markdown 编辑器：
编辑器 性质 Mac Windows Linux Android iPhone Web 强烈推荐 Typora 商业软件 √ √ √ Yes VS Code 开源免费 √ √ √ √ Yes 马克飞象 免费模式 √ √ √ Yes ghostwriter 开源免费 √ √ Yes Zettlr 开源免费 √ √ √ MindForger 开源免费 √ √ Mou 商业软件 √ Cmd Markdown 免费模式 √ √ √ √ StackEdit 免费模式 √ Mark Text 免费模式 √ √ √ Abricotine 开源免费 √ √ √ </description>
    </item>
    <item>
      <title>Markdown 引用</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/quote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/quote/</guid>
      <description>语法 # 使用标记符 &amp;gt; 对内容进行引用。
&amp;gt; 引用一段内容 引用一段内容
引用的多层嵌套 # 只要根据层次加上不同数量的 &amp;gt; 。
代码：
&amp;gt; 请问 Markdown 怎么用？ - 小白 &amp;gt; &amp;gt;&amp;gt; 自己看教程！ - 愤青 &amp;gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt; 教程在哪？ - 小白 &amp;gt;&amp;gt; &amp;gt;&amp;gt; 我也不知道在哪！ - 愤青 &amp;gt; &amp;gt; 那你回答个屁。 - 小白 显示效果：
请问 Markdown 怎么用？ - 小白
自己看教程！ - 愤青
教程在哪？ - 小白
我也不知道在哪！ - 愤青
那你回答个屁。 - 小白
引用其它要素 # 引用的区块内也可以使用其他的语法，包括标题、列表、代码区块等。
代码：
&amp;gt; 1.1 这是第一行列表项。 &amp;gt; &amp;gt;&amp;gt; 2.1 这是第二行列表项。 &amp;gt;&amp;gt; &amp;gt;&amp;gt;- 这是无序列表项。 &amp;gt; &amp;gt; #### 给出一些例子代码： &amp;gt; ```bash &amp;gt; return shell_exec(&amp;#34;echo $input | $markdown_script&amp;#34;); &amp;gt; ``` 显示效果：</description>
    </item>
    <item>
      <title>Markdown 加粗倾斜下划线等</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/bolditalicunderline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/bolditalicunderline/</guid>
      <description>加粗倾斜删除 # **粗体** ***加粗斜体*** *斜体*或_斜体_ ~~删除线~~ 强调也可以直接插在文字中间：
un**frigging**believable unfriggingbelievable
如果 * 和 _ 与强调文字之间有空格的话，它们就只会被当成普通的符号。比如：
不是** 把学的东西用起来 **， 而是** 为了用而学**！ 不是** 把学的东西用起来 **，
而是** 为了用而学**！
上标 / 下标 # 上标：O&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; 下标：H&amp;lt;sub&amp;gt;2&amp;lt;/sub&amp;gt;O 上标：O2
下标：H2O
下划线 # &amp;lt;u&amp;gt;下划线 underline&amp;lt;/u&amp;gt; 用数学公式： 下划线 $\underline{X}$ 上划线 $\overline{X}$ 下划线 underline
用数学公式：下划线 $\underline{X}$ 上划线 $\overline{X}$
另外，如果想要个性化下划线，可以使用 html 的 span 标签、设置行内 CSS 的 border-bottom 属性来添加下划线。这种方式自定义程度最高。
语法：
&amp;lt;span style=&amp;#34;border-bottom: 2px dashed red;&amp;#34;&amp;gt;下划虚线&amp;lt;/span&amp;gt; 下划虚线
其他下划线格式：
&amp;lt;span style=&amp;#34;border-bottom: 1px solid red;&amp;#34;&amp;gt;单下划线&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;#34;border-bottom: thick double #32a1ce;&amp;#34;&amp;gt;双下划线&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;#34;border-bottom: 2px dotted red;&amp;#34;&amp;gt;下划虚线&amp;lt;/span&amp;gt; 单下划线</description>
    </item>
    <item>
      <title>Markdown 文档布局</title>
      <link>https://md.xalaok.top/docs/document-style/layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/layout/</guid>
      <description>无论是写文章还是写文档，写前都要想清楚内容的框架结构，这是非常重要的。可以用思维导图来规划内容的框架，然后根据框架来书写。
文档布局 # 来自 Google 的 Markdown 样式指南。
In general, most documents benefit from some variation of the following layout:
# Document Title ![theme picture](URL) Short introduction. [TOC] ## Topic Content. ## See also * https://link-to-more-info # Document Title: The first heading should be a level one heading, and should ideally be the same or nearly the same as the filename. The first level one heading is used as the page &amp;lt;title&amp;gt;.</description>
    </item>
    <item>
      <title>Markdown 链接</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/link/</guid>
      <description>Markdown 支持两种形式的链接语法： 行内链接 和 参考链接。
行内形式 # 链接文字都是用 [方括号] 来标记，使用 (圆括号) 来把文字转成链接。还可以为链接文字配个Title，当然 Title 属性是可选项，加不加看心情咯。
[链接文字](链接网址 &amp;#34;标题&amp;#34;) This is an [example link](http://example.com/ &amp;#34;With a Title&amp;#34;). This is an example link.
在 Typora 软件中，复制一个链接，选中文字按 ctrl-K 快速插入链接。
参考形式 # 为参考形式的链接定一个 [name] 方便我们在文章中多次引用（name 可以用字母、数字和空格，且不分大小写）。
[链接文字][name] [name]: link &amp;#34;Title&amp;#34; 举例：
早饭后，我打开 每日英语听力 学习英语。遇到不懂的英语单词，我借助 欧路在线词典 查看释义并加入生词本，方便使用 客户端 随时记忆单词。
早饭后，我打开 [每日英语听力][1] 学习英语。遇到不懂的英语单词，我借助 [欧路在线词典][2] 查看释义并加入生词本，方便使用 [客户端][3] 随时记忆单词。 [1]: https://dict.eudic.net/ting &amp;#34;每日英语听力&amp;#34; [2]: https://dict.eudic.net/ &amp;#34;《欧路词典》在线版&amp;#34; [3]: https://www.eudic.net/v4/en/app/eudic &amp;#34;《欧路词典》英语翻译软件&amp;#34; 一直用 百度，当知道 搜狗 可以搜索微信和知乎时，我慢慢爱上了 搜狗 这个功能。学术搜索还是用 Google。平时也会用 Bing，毕竟各有所长。</description>
    </item>
    <item>
      <title>文章标题多少字最合适？</title>
      <link>https://md.xalaok.top/docs/document-style/title-word-count/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/title-word-count/</guid>
      <description> 从理性的角度讲，标题字数控制在 60 个字节内，推荐 &amp;lt;= 50 字节。从感性的角度来讲，文章标题字数在 10-20 之间都是合理的选择，一般不要超过 23 字。 对搜索用户来说，标题是一个网页最直观的认知渠道和展现方式，也是吸引用户点击搜索结果进入落地页的关键因素。
标题是文章的眼睛，它要求简洁明了、新颖别致、醒目夺人。换句话说，文章的标题其实就是 软文的窗口，只有窗口打开了，用户才能看得见。
文章的标题字数的多少对于 SEO 优化、搜索引擎的收录、标题的吸引、阅读的美观度等等都有影响，因此一个优秀的文章的标题一定是非常吸引人的、有概括性的而且标题不太长也不太短的。
从以往的经验看，检索用户比较喜欢 50 个字节左右的标题；对于产品人员和编辑来说，过短的标题有可能无法全面表达网页主题；对于搜索引擎来说，标题过长意味着“超标”，（百度）只会保留前 60 个字节的内容。超过的部分用省略号表示，省略号部分如果有关键词，搜素引擎是不会识别的，用户在搜索这个关键词时，百度也就不会把你的文章推荐给用户。
搜索引擎中字符的大小
占一个字节：一个英文字符，比如英文字母、半角空格、英文标点、数字；
占二个字节：一个中文（含繁体）字符，比如汉字、全角空格、全角标点。
经过实际考察，百度搜索结果最多只显示 50 个字节，超过的部分用省略号「&amp;hellip;」表示。算下来也就是最多显示 25 个汉字（不含标点与空格）。
可以将写好的标题放到 字数统计里面，查看标题是否过长。熟练以后可直接口算标题占用的字节数，精简到 50 字节以内。
应该参考 百度搜索网页标题规范 / 【网站优化】产品、编辑必看：撰写搜索引擎喜爱的标题，科学合理的设置标题。特别注意，文章标题要包含目标关键词，且关键词的位置尽量靠前。
文章标题字数过短的弊端 # 从用户体验的角度上讲，言简意赅，能够概括出文章的中心思想的标题就是好标题，至于字数，不是侧重的方面。但站在站长的角度去看，为了增加收录、获得访问量，标题字数过短绝对会让你错失很多机会。
字数过短导致文章标题重复率高，新鲜度不够，收录不佳； 字数过短导致收录后的排名靠后，丢掉长尾关键词搜索用户； 标题字数太短难以添加长尾关键词； 标题字数过短不好做标题党，也不容易在推广的时候引起注意； 标题过短导致 CMS 类网站界面空白太多，不美观，对推广不利。 See also # 文章标题一般多少字最合适 文章标题字数过短的弊端 标题标签 网站文章标题有字数限制吗 </description>
    </item>
    <item>
      <title>Markdown 图片</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/image/</guid>
      <description>图片的语法和链接很像。 alt text 是替换文本；alt 属性规定在图像无法显示时的替代文本。虽然 alt text 可以不填，但推荐还是填上。 Title 是可选项。
行内形式 # ![alt text](/path/to/img.jpg &amp;#34;Title&amp;#34;) 参考形式 # ![alt text][id] [id]: /path/to/img.jpg &amp;#34;Title&amp;#34; 插入互联网上图片 # 我在我的笔记本上装了 openSUSE Leap: ![opensuse-laptop](https://www.opensuse.org/build/images/opensuse-laptop.gif) 我在我的笔记本上装了 openSUSE Leap: 控制图片的大小 对齐方式 # MarkDown 中显示图片的语法是 ![图片描述](图片地址) 。但是有时候我们需要更改图片大小和位置。
通过 img 标签控制宽高
&amp;lt;img src=&amp;#34;http://pic15.photophoto.cn/20100615/0006019058815826_b.jpg&amp;#34; height=&amp;#34;330&amp;#34; width=&amp;#34;495&amp;#34;&amp;gt; 通过 &amp;lt;div&amp;gt; 标签和 align 属性控制对齐方式
单张图片：
&amp;lt;div align=center&amp;gt;![alt text](/path/to/img.jpg &amp;#34;Title&amp;#34;) &amp;lt;div align=right&amp;gt;![alt text](/path/to/img.jpg &amp;#34;Title&amp;#34;) 多张图片可以这样写：
&amp;lt;div align=&amp;#34;center&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;http://pp.myapp.com/ma_pic2/0/shot_42391053_1_1488499316/550&amp;#34; height=&amp;#34;330&amp;#34; width=&amp;#34;190&amp;#34; &amp;gt; &amp;lt;img src=&amp;#34;http://pp.myapp.com/ma_pic2/0/shot_42391053_2_1488499316/550&amp;#34; height=&amp;#34;330&amp;#34; width=&amp;#34;190&amp;#34; &amp;gt; &amp;lt;img src=&amp;#34;http://pp.</description>
    </item>
    <item>
      <title>文章标题中标点符号的用法</title>
      <link>https://md.xalaok.top/docs/document-style/punctuation-mark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/punctuation-mark/</guid>
      <description> 文章的标题不管是一个词语、单句还是复句，句末都不加句号。因为句号表示一句话完了，而标题是作者对全文内容的概括，没有用句号的必要。
文章标题是复句，中间可加逗号，句末仍然不用句号。
文章标题中间可以加顿号 、。
文章标题表示疑问或感叹语气的，可以加问号或感叹号，也可以不加。
文章标题中可以用破折号 ——、省略号 …… / ...。
文章标题中可以用冒号 ：。
文章标题中可以用引号、书名号。
引号表示文中引用的部分。有双引号 “” 『』 和单引号 ‘’ 「」 两种。
书名号分为双书名号 《》 和单书名号 〈〉，用于标明书名、篇名、报刊名、文件名、戏曲名、歌曲名、图画名等，亦用于歌曲、电影、电视剧等与书面媒介紧密相关的文艺作品。
文章标题中可以用间隔号。
由两句话或两个短语构成文章的标题，除上面说的用逗号或间隔号外，也可以在中间空一格。
如果文章标题有副标题，在副标题前要用破折号。
标点符号是文化发展的产物。郭沫若曾说过：“标点之于言文有同等的重要，甚至有时还在其上。言文而无标点，在现今是等于而无眉目。”文章的标题更是如此，正确标题，才能更好地发挥其的概括、综合、提示的作用。
See also # 关于文章标题中标点符号的用法，你用对了吗？ 文章标题标点符号使用规则 SEO文章标题标点符号的正确使用 英语文章标题的标点符号用法初探 最新百家号标题标点符号规范大全 关于文章标题及标题中标点符号的最正确写法 </description>
    </item>
    <item>
      <title>Markdown 列表</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/list/</guid>
      <description>Markdown 支持 有序列表 和 无序列表。
无序列表 # 使用星号 *、加号 + 或是减号 - 作为列表标记，标记符号后至少一个空格或制表符（Tab）。
* Green - Red + Blue 显示效果：
Green Red Blue 无序列表标记符前每增加 2 个空格或是 4 个空格，增加一个层级：
- 伟大始于渺小。 - 说和做是迥然不同的两回事。 - 行动比语言更响亮。 伟大始于渺小。 说和做是迥然不同的两回事。 行动比语言更响亮。 有序列表 # 使用数字接着一个英文句点。标记符号后面也要接着至少一个空格或制表符（Tab）。
1. First paragraph 2. Second paragraph 3. Third paragraph First paragraph Second paragraph Third paragraph 在列表标记上使用的数字并不会影响输出的 HTML 结果，这意味着，你可以：
1. Foo. 1. Bar. 1. Foofoo. 1. Barbar. 1. Baz. Foo. Bar. Foofoo.</description>
    </item>
    <item>
      <title>为什么你们就是不能加个空格呢？</title>
      <link>https://md.xalaok.top/docs/document-style/blank/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/blank/</guid>
      <description>根据中华人民共和国新闻出版行业标准：CY/T 154—2017 中文出版物夹用英文的编辑规范（ 下载地址（中国地质大学））
8　空格的规则
8.1　中文文本中夹用英文词句时，应根据所选用的中英文字体、字符间距以及排版的视觉效果决定英文词句与中文文字之间是否留有空格间距。如留空格，应保证体例的统一。
示例 1：用 yes 或 no 回答的问句，可以称为 yes-no 疑问句。
示例 2：在此句中，the little girl in white 是名词短语。
8.2　中文文本中夹用英文词句时，如英文部分之前或之后有中文标点符号，则英文部分与中文标点之间不设空格。
示例：介词 at 常与表示较小地点的名词连用，如：at the bus stop、at the railway station。
8.3　中文文本中夹用英文句子或段落时，英文句子或段落内部应按英文排版规则留空。
示例：在例句“It is always the best to be on the safe side.”中，it 是形式主语。
关于排版中运用空格的项目：
为什么你们就是不能加个空格呢——插件会在网页中所有的中文字与半角的英文、数字、符号之间插入空格。 汉字标准格式——一套支援各种印刷效果的 Sass + JavaScript 排版框架，包含相邻文字装饰线跳脱、汉字标音、着重号、标点符号修正、中文四大印刷体、汉字－西文 mixed 间隙、「标点『挤压』与『悬挂』」、章节边界调整等功能。 </description>
    </item>
    <item>
      <title>Markdown 任务列表</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/to-do-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/to-do-list/</guid>
      <description>代码：
- [ ] a task list item - [x] completed - [ ] incomplete - [ ] list syntax required - [x] completed 显示效果：
a task list item completed incomplete list syntax required completed </description>
    </item>
    <item>
      <title>数字序号的七个层级</title>
      <link>https://md.xalaok.top/docs/document-style/numbering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/numbering/</guid>
      <description>一、数字序号的层级 # （一）数字序号的七个级别顺序为：
第一层为汉字数字加顿号，例如：“一、”“二、”“三、”；
第二层为括号中包含汉字数字，例如：“（一）”“（二）”“（三）”；
第三层为阿拉伯数字加下脚点，例如：“1． ”“2．”“3．”；
第四层为括号中包含阿拉伯数字，例如：“（1）”“（2）”“（3）”；
第五层为带圈的阿拉伯数字，例如：“①”“②”“③”或者“1）”“2）”“3）”；
第六层为大写英文字母，例如：“A．”“B．”“C．”或者“（A）”“（B）”“（C）”；
第七层为小写英文字母，例如： “a．”“b．”“c．”或者“（a)”“（b）”“（c）”；
……
（前两层为汉字数字，中间三层为阿拉伯数字，后面两层为阿拉伯字母）
根据场景，优先遵循相关网站期刊的论文排版格式要求。没有要求的情况下，序号中的标点符号建议使用全角标点，带圈的数字与内容之间留一个半角空格。 请参考 科技论文规范写作与编辑（第3版）电子书中序号的使用。
（二）数字序号级别一览表：
第一层 第二层 第三层 第四层 第五层 第六层 第七层 一、 （一） 1． （1） ① A． a． 二、 （二） 2． （2） ② B． b． 三、 （三） 3． （3） ③ C． c． （A） （a） （B） （b） （C） （c） 第一， 第二， 首先， 其次， （三）理科类论文的正文层次标题序号
理科类论文的各层次标题还可用阿拉伯数字连续编码，不同层次的 2 个数字之间用半角圆点（.）分隔开，末位数字后面不加点号。如“1”，“1.2”，“1.2.1”等；各层次的标题序号均左顶格排写，最后一个序号之后空一个字距（一个全角空格）接排标题。比如：
1　科技论文基础知识 1.1　科学研究与科技论文的概念 1.1.1　科学研究的概念 1.1.2　科技论文的概念 1.2　科技论文的特点 1．创新性 2．理论性 3．科学性 4．规范性 1.</description>
    </item>
    <item>
      <title>Markdown 代码块与语法高亮</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/code-block/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/code-block/</guid>
      <description>插入程序代码的方式有两种：使用反引号 `（~ 键）、使用缩进（Tab）。
插入行内代码，即插入一个单词或者一句代码的情况，使用 `code` 这样的形式插入。 插入多行代码，分别使用三个反引号（```）包裹多行代码。或者使用缩进。 行内代码 # 在一般的段落文字中，可以使用反引号 ` 来标记或插入代码区段。
C 语言里的函数 `scanf()` 怎么使用？ C 语言里的函数 scanf() 怎么使用？
当然也可以标记 文件名 、关键词 等。
多行代码 # 在需要高亮的代码块的前一行及后一行使用三个反引号 ```（~ 键） 同时第一行反引号后面，输入代码块所使用的语言，实现代码高亮。 比如高亮 python3 代码块：
#!/usr/bin/env python3 print(&amp;#34;Hello, World!&amp;#34;); 显示为：
#!/usr/bin/env python3 print(&amp;#34;Hello, World!&amp;#34;); 缩进式插入多行代码 # 注意：
缩进式插入前方必须有空行；
缩进 4 个空格或是 1 个制表符；
一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。
代码：
此处有空行 #include &amp;lt;stdio.h&amp;gt;` int main(void)` { printf(&amp;#34;Hello world\n&amp;#34;); } 显示效果：
#include &amp;lt;stdio.h&amp;gt;` int main(void)` { printf(&amp;quot;Hello world\n&amp;quot;); } 代码区块中的内容 # 代码区块中，一般的 Markdown 语法不会被转换，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</description>
    </item>
    <item>
      <title>怎样为文章「配图」</title>
      <link>https://md.xalaok.top/docs/document-style/illustrations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/illustrations/</guid>
      <description> 配图的目的 # 配图最主要的目的是为了用更直观的方式展示文字表达困难的内容，优秀的配图往往可以提升阅读的体验，让读者抛离晦涩难懂的文字来了解文章内容。亦或是一两个彩蛋，给读者惊喜。
于此同时，图片的存在也给读者一定的「休息空间」，从而让读者视觉上从密集的文字中脱离出来稍作休息，继续阅读。
在文章中的每一张图片，都要有考虑存在的意义。能够通过文字清楚直接表述的，没有必要添加图片。过多的图片，尤其是和文字关联不大甚至是没有关联的图片和文字交叉重叠时，会打断阅读的进程。反而严重影响阅读体验。这种做法主要泛滥于微信公众号的文章，好在那里面绝大多数文章本来就没有任何价值。
说到底，一篇文章的质量最终还是要回到文字的本身，去评判文章的优劣时，相比于图片的质量，文字的质量显然占更高的比重。为图片花费几个小时无可厚非，但同样的，也要花费更多时间对的文字进行打磨。
See also # 常用图我是怎样为文章选择配图的 </description>
    </item>
    <item>
      <title>Markdown 换行与段首缩进</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/wrappingindenting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/wrappingindenting/</guid>
      <description>换行 # Markdown 中，段落之间的换行是通过在段落之间留空行的方式来实现。
段落一 段落二 但我们会有其他的换行需求，可以这样实现：
键入 HTML 语言换行标签：&amp;lt;br&amp;gt;（通用） 段落内换行使用换行符 &amp;lt;br&amp;gt;，或者 两个空格 + shift-Enter。不推荐使用 \ + shift-Enter。 Typora 中，空行中使用四个空格（一个 Tab）可以快速增大段落之间的间距 为了演示效果，举例如下：
春望&amp;lt;br&amp;gt;唐代：杜甫 国破山河在，城春草木深。 感时花溅泪，恨别鸟惊心。 烽火连三月，家书抵万金。 白头搔更短，浑欲不胜簪。 春望
唐代：杜甫
国破山河在，城春草木深。
感时花溅泪，恨别鸟惊心。
烽火连三月，家书抵万金。
白头搔更短，浑欲不胜簪。
段首缩进 # 使用 Markdown 写文章不需要段首缩进。但如果你需要的话，可以在段落前面使用：
1）两个全角空格 # 因为一个全角空格（space）的宽度是整整一个汉字，输入两个全角空格正好是两个汉字的宽度。
全角空格的输入方法为：一般的中文输入法都是按 shift + space，可以切换到全角模式下，输完后再次按 shift + space 切换回正常输入状态。
2）使用特殊占位符 # 使用特殊占位符，不同占位符所占空白是不一样大的。
&amp;amp;ensp; or &amp;amp;#8194; 表示一个半角的空格 &amp;amp;emsp; or &amp;amp;#8195; 表示一个全角的空格 &amp;amp;emsp;&amp;amp;emsp; 两个全角的空格（用的比较多） &amp;amp;nbsp; or &amp;amp;#160; 不断行的空白格 表示一个半角的空格
表示一个全角的空格
两个全角的空格（用的比较多）</description>
    </item>
    <item>
      <title>Markdown 表格</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/table/</guid>
      <description> 语法说明 # 第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行； 列与列之间用管道符 | 隔开。原生方式的表格每一行的两边也要有管道符； 第二行还可以为不同的列指定对齐方向。默认为左对齐，可以使用冒号 : 来定义表格的对齐方式。冒号在分隔符 - 右边右对齐，在两边居中。 简单方式写表格 # 学号|姓名|分数 -|:-:|-: 小明|男|75 小红|女|79 小陆|男|92 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 原生方式写表格 # |学号|姓名|分数| |---|---|---| |小明|男|75| |小红|女|79| |小陆|男|92| 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 </description>
    </item>
    <item>
      <title>Markdown 目录</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/toc/</guid>
      <description>在文章摘要或者文章简介之后，填写 [TOC] 以显示全文内容的目录结构。
TOC 是 Table of Contents 的简写。</description>
    </item>
    <item>
      <title>Markdown 折叠内容</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/details/</guid>
      <description>HTML &amp;lt;details&amp;gt; 标签指定了用户可以根据需要打开和关闭的额外细节。
语法：
&amp;lt;details&amp;gt; &amp;lt;summary&amp;gt;Title&amp;lt;/summary&amp;gt; contents ... &amp;lt;/details&amp;gt; 内容里面可以嵌套使用 Markdown 语法和 HTML 语法。
效果：
Title contents ... 有的 Markdown 中，可能 &amp;lt;summary&amp;gt; 标签与正文间要空一行。比如：
&amp;lt;details&amp;gt; &amp;lt;summary&amp;gt;View Code&amp;lt;/summary&amp;gt; code ... &amp;lt;/details&amp;gt; 当然，有空行的话比较方便阅读源码。</description>
    </item>
    <item>
      <title>Markdown 分割线</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/split-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/split-line/</guid>
      <description>可用三个以上的减号、星号、底线在一空行中建立一条分隔线，中间可以插入空格，但行内不能有其他东西。
--- *** ___ 效果如下：</description>
    </item>
    <item>
      <title>Markdown 注脚</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/footnote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/footnote/</guid>
      <description>语法 # 在这段文字后添加一个脚注[^footnote]. [^footnote]:这里是脚注的内容. footnote 可以是任意英文字符；
脚注的内容可以放在文章的任意位置（一般放最后）。
举例 # 使用 Markdown[^1] 可以效率的书写文档，直接转换成 HTML[^2], 你可以使用 Typora[^T] 软件。 [^1]:Markdown 是一种纯文本标记语言。 [^2]:HyperText Markup Language 超文本标记语言。 [^T]:Typora 官网 &amp;lt;https://typora.io/&amp;gt; 使用 Markdown1 可以效率的书写文档，直接转换成 HTML2，你可以使用 Typora3 软件。
脚注显示在文章末尾；脚注后方的链接可以直接跳转回到加注的地方。
Markdown 是一种纯文本标记语言。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
HyperText Markup Language 超文本标记语言。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
Typora 官网 https://typora.io/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    <item>
      <title>Markdown 音频</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/audio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/audio/</guid>
      <description>音频文件可以用 HTML 的方式嵌入到 Markdown 中。
使用 HTML5 &amp;lt;audio&amp;gt; 元素 # 下面是一个将音频嵌入到 HTML 文档的例子。
&amp;lt;audio src=&amp;#34;/test/audio.ogg&amp;#34;&amp;gt; 你的浏览器不支持 audio 标签。 &amp;lt;/audio&amp;gt; src 属性可以设置为一个音频文件的 URL 或者本地文件的路径。
&amp;lt;audio src=&amp;#34;audio.mp3&amp;#34; preload=&amp;#34;none&amp;#34; controls loop&amp;gt; 你的浏览器不支持 audio 标签。 &amp;lt;/audio&amp;gt; 这个例子的代码中使用了 HTML 的“audio”元素的一些属性：
&amp;lsquo;&amp;lsquo;controls&amp;rsquo;&amp;rsquo; : 为网页中的音频显示标准的 HTML5 控制器。 &amp;lsquo;&amp;rsquo;loop&amp;rsquo;&amp;rsquo; : 使音频自动重复播放。 &amp;lsquo;&amp;lsquo;preload&amp;rsquo;&amp;rsquo; : 属性用来缓冲 audio 元素的大文件，有三个属性值可供设置： &amp;ldquo;none&amp;rdquo; 不缓冲文件 &amp;ldquo;auto&amp;rdquo; 缓冲音频文件 &amp;ldquo;metadata&amp;rdquo; 仅缓冲文件的元数据 参阅 HTML5 &amp;lt;audio&amp;gt; 元素，和 使用 HTML5 音频和视频。
在线音乐 # 进入 网易云音乐 歌曲界面，点击光碟下方的生成外链播放器：
&amp;lt;iframe frameborder=&amp;#34;no&amp;#34; border=&amp;#34;0&amp;#34; marginwidth=&amp;#34;0&amp;#34; marginheight=&amp;#34;0&amp;#34; width=330 height=86 src=&amp;#34;//music.</description>
    </item>
    <item>
      <title>Markdown 视频</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/video/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/video/</guid>
      <description>视频文件可以用 HTML 的方式嵌入到 Markdown 中。
HTML5 &amp;lt;video&amp;gt; 元素 # 原生仅支持播放 ogg/mp4/webm 格式。不支持播放 FLV 格式视频。
Type Filename Extension video/ogg ogg /ogv /ogm video/webm webm video/mp4 mp4 在 HTML 中嵌入视频：
&amp;lt;video src=&amp;#34;http://v2v.cc/~j/theora_testsuite/320x240.ogg&amp;#34; controls&amp;gt;&amp;lt;/video&amp;gt; 这个例子展示了一个带有回放控制器的可播放视频，视频来源于 Theora 网站。
然而，浏览器并不是都支持相同的 视频格式，所以你可以在 &amp;lt;source&amp;gt; 元素里提供多个视频源，然后浏览器将会使用它所支持的第一个源。
&amp;lt;video width=&amp;#34;320&amp;#34; controls loop&amp;gt; &amp;lt;source src=&amp;#34;myVideo.mp4&amp;#34; type=&amp;#34;video/mp4&amp;#34;&amp;gt; &amp;lt;source src=&amp;#34;myVideo.webm&amp;#34; type=&amp;#34;video/webm&amp;#34;&amp;gt; &amp;lt;source src=&amp;#34;myVideo.ogv&amp;#34; type=&amp;#34;video/ogg&amp;#34; /&amp;gt; &amp;lt;/video&amp;gt; 属性：
&amp;lsquo;&amp;lsquo;controls&amp;rsquo;&amp;rsquo; : 允许用户控制视频的播放，包括音量，跨帧，暂停/恢复播放。 &amp;lsquo;&amp;lsquo;width&amp;rsquo;&amp;rsquo; : 视频显示区域的宽度，单位是CSS像素。 &amp;lsquo;&amp;lsquo;height&amp;rsquo;&amp;rsquo; : 展示区域的高度，单位是CSS像素。 &amp;lsquo;&amp;rsquo;loop&amp;rsquo;&amp;rsquo; : 布尔属性；指定后，会在视频结尾的地方，自动返回视频开始的地方。 &amp;lsquo;&amp;lsquo;src&amp;rsquo;&amp;rsquo; : 要嵌到页面的视频的URL。可选；你也可以使用video块内的 &amp;lt;source&amp;gt; 元素来指定需要嵌到页面的视频。 参阅 HTML5 &amp;lt;video&amp;gt; 元素， 和 使用 HTML5 音频和视频。</description>
    </item>
    <item>
      <title>附：如何下载国内外标准</title>
      <link>https://md.xalaok.top/docs/document-style/standard-download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/document-style/standard-download/</guid>
      <description> 各种标准的代号 # 国内代号取自汉字拼音的缩写：
GB 强制性国家标准 GB/T 推荐性国家标准 GB/Z 国家标准指导性技术文件 GJB 国家军用标准 CY/T 推荐性新闻出版行业标准 参阅百度百科词条「 国家标准分类」，以及搜索「 各种标准的代号」。
国外代号取自英语的首字母：
ISO 国家标准化组织（International Organization for Standardization） EN 欧盟标准（European Norm） ANSI 美国国家标准化组织（American National Standards Institute） 在线阅读 # 国家标准全文公开系统提供了国家标准的题录信息和全文在线阅读，具有“分类检索”“热词搜索”等功能。任何企业和社会公众都可以通过国家标准委官方网站“国家标准全文公开系统”，或通过微信公众号“中国标准信息服务网”查阅国家标准文本。
举例：查阅「 标点符号用法」和「 出版物上数字用法」。
文档下载 # 比较简单的方法就是使用搜索引擎直接搜索文件进行下载。比如：
标点符号用法2011 filetype:pdf 夹用英文的中文文本的标点符号用法 filetype:pdf See also # 科研 | 如何下载国内外标准，看这篇文章就够了！ </description>
    </item>
    <item>
      <title>Markdown 特殊符号</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/symbols/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/symbols/</guid>
      <description>特殊字符是相对于传统或常用的符号外，使用频率较少字符且难以直接输入的符号。比如数学符号；单位符号； 制表符等。
使用特殊符号 # 常用符号大全 Emoji 如果不嫌麻烦，写作时可以灵活运用一些特殊符号，以增加文档的趣味性：
常用排版： ▌▍◆★☆☁➤➜❤➊➋➌
TodoList： ✅☑✓✔√☓☒✘ㄨ✕✖✗❌❎
emoji：🌹🍀🌙🍂🍃🌷💎🔥⭐🍄🏆
使用 HTML 符号 # HTML 支持的特殊符号：数学符号 / 希腊字母 / 其他 HTML 符号也都可以用到 Markdown 中。比如：
结果 描述 实体名称 实体编号 ← left arrow &amp;amp;larr; &amp;amp;#8592; ↑ up arrow &amp;amp;uarr; &amp;amp;#8593; → right arrow &amp;amp;rarr; &amp;amp;#8594; ↓ down arrow &amp;amp;darr; &amp;amp;#8595; ↔ left right arrow &amp;amp;harr; &amp;amp;#8596; ↵ carriage return arrow &amp;amp;crarr; &amp;amp;#8629; </description>
    </item>
    <item>
      <title>Markdown 数学公式</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/math-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/math-formula/</guid>
      <description>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。如：
一个简单的数学公式，求圆的面积：
$$S=\pi r^2$$ \[S=\pi r^2\] 可以使用一个美元符 $ 包裹 TeX 或 LaTeX 格式的数学公式来实现行内数学公式。如：
圆的面积公式：$S=\pi r^2$ 圆的面积公式： \(S=\pi r^2\) 请注意，Markdown 特殊字符需要使用反斜杠转义，以便将它们视为数学而不是 Markdown。 例如，* 和 _ 分别变为 \* 和 \_。 同时也支持 HTML 属性，如：
$$ (x+1)^2 = \class{hidden}{(x+1)(x+1)} $$ $$ (x+1)^2 = \cssId{step1}{\style{visibility:hidden}{(x+1)(x+1)}} $$ </description>
    </item>
    <item>
      <title>Markdown 流程图</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/flow-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/flow-chart/</guid>
      <description>横向流程图 # graph LR; A[Hard edge] --&amp;gt;|Label| B(Round edge) B --&amp;gt; C{Decision} C --&amp;gt;|One| D[Result one] C --&amp;gt;|Two| E[Result two] graph LR; A[Hard edge] --&gt;|Label| B(Round edge) B --&gt; C{Decision} C --&gt;|One| D[Result one] C --&gt;|Two| E[Result two] 纵向流程图 # graph TD; A[christmas] --&amp;gt;B(Go shopping) B --&amp;gt; C{Let me think} C --&amp;gt;|One| D[Laptop] C --&amp;gt;|Two| E[iPhone] C --&amp;gt;|Three|F[Car] graph TD; A[christmas] --&gt;B(Go shopping) B --&gt; C{Let me think} C --&gt;|One| D[Laptop] C --&gt;|Two| E[iPhone] C --&gt;|Three|F[Car] 控制图 # st=&amp;gt;start: Start op=&amp;gt;operation: Your Operation cond=&amp;gt;condition: Yes or No?</description>
    </item>
    <item>
      <title>Markdown 设置字体、字号与颜色</title>
      <link>https://md.xalaok.top/docs/syntax/detailed/font/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://md.xalaok.top/docs/syntax/detailed/font/</guid>
      <description>Markdown 本身不支持修改字体、字号与颜色等，还好 Markdown 支持 HTML 语言，所以我们采用 HTML 语法格式即可。
设置字体、字号和颜色 # 编辑字体、字号和颜色的代码如下：
&amp;lt;font face=&amp;quot;黑体&amp;quot;&amp;gt; 我是黑体字 &amp;lt;/font&amp;gt; &amp;lt;font face=&amp;quot;微软雅黑&amp;quot;&amp;gt; 我是微软雅黑 &amp;lt;/font&amp;gt; &amp;lt;font color=gray size=7&amp;gt; color=gray &amp;lt;/font&amp;gt; &amp;lt;font color=#00ffff size=7&amp;gt; color=#00ffff &amp;lt;/font&amp;gt; &amp;lt;font color=#0099ff size=7 face=&amp;quot;黑体&amp;quot;&amp;gt; color=#0099ff size=7 face=&amp;quot;黑体&amp;quot; &amp;lt;/font&amp;gt; // Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。 font 是一对常规标签，font 标签内设置 color=&amp;quot;对应颜色值&amp;quot; 即可设置对象内字体的颜色：
&amp;lt;font color=&amp;#34;red&amp;#34;&amp;gt; 我是红色字体 &amp;lt;/font&amp;gt; 或者 &amp;lt;font color=&amp;#34;#FF0000&amp;#34;&amp;gt; 我也是红色字体 &amp;lt;/font&amp;gt; 我是红色字体 或者 我也是红色字体
另外，还可以这样设置字体颜色：
$\color{green}{绿色} $ $\color{green}{绿色} $
文字居中 # 对于标准的 Markdown 文本，默认左对齐，是不支持居中对齐的。我们采用 HTML 语法格式：</description>
    </item>
  </channel>
</rss>
